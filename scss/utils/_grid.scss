html {
  box-sizing: border-box;
  -ms-overflow-style: scrollbar;
}

$grid-breakpoints: (
  xs: 375px,
  sm: 768px,
  md: 1024px,
  lg: 1280px,
  xl: 1440px,
) !default;


// Respond above and below.z
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($grid-breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value +1 ) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($grid-breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


/**/
.container{
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-column-gap: var(--m);
  margin:0 var(--m);
}

@include respond-above(sm){
  .container{
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr ;
    grid-column-gap: var(--l);
    margin:0 var(--xl);
  }
}
@include respond-above(md){
  .container{
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-column-gap: var(--l);
    margin:0 var(--xxxxl);
  }
}
@include respond-above(xl){
  .container{
    grid-column-gap: var(--l);
    margin:0 var(--xxxxxl);
  }
}

